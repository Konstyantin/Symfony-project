<?php

namespace UserBundle\Repository;

use UserBundle\Entity\UserCar;

/**
 * UserCarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserCarRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Get user car list
     *
     * Get user car by passed user id
     *
     * @param int $userId
     * @return array
     */
    public function getUserCarList(int $userId)
    {
        $query = $this->createQueryBuilder('c')
            ->where('c.user =:user')
            ->setParameter('user', $userId)
            ->getQuery();

        return $query->getResult();
    }

    /**
     * Get user car
     *
     * Get user car by passed car_id and user_id parameters
     *
     * @param int $carId
     * @param int $userId
     * @return array
     */
    public function getUserCar(int $carId, int $userId)
    {
        $query = $this->createQueryBuilder('c')
            ->where('c.user =:user')
            ->andWhere('c.id =:id')
            ->setParameter('user', $userId)
            ->setParameter('id', $carId)
            ->getQuery();

        return $query->getOneOrNullResult();
    }

    /**
     * Create user car
     *
     * @param $data
     * @param $user
     */
    public function create(UserCar $data, $user)
    {
        $em = $this->getEntityManager();

        $data->setUser($user);

        $em->persist($data);
        $em->flush();
    }

    /**
     * Edit user car
     *
     * @param $data
     */
    public function edit(UserCar $data)
    {
        $em = $this->getEntityManager();

        $em->persist($data);
        $em->flush();
    }

    /**
     * Delete user car
     *
     * @param $data
     */
    public function delete(UserCar $data)
    {
        $em = $this->getEntityManager();

        $em->remove($data);
        $em->flush();
    }

    /**
     * Get first item
     *
     * Get some user car item in user car list
     *
     * @return mixed
     */
    public function getFirstItem()
    {
        $query = $this->createQueryBuilder('userCar')
            ->setMaxResults(1)
            ->getQuery();

        return $query->getSingleResult();
    }
}
